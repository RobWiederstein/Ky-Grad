return (5)
}
f()
f <- function (){
g <- function(){
return(1)
}
return (2)
}
f
f()
f()()
f <- function (){
function(){
return(1)
}
return (2)
}
f()
f()()
f <- function (){
g <- function(){
return(1)
}
return (2)
}
f
g()
g()
f()
f()()
Main <- function(){
x <- 1:3
function(){
y <- 4:6
some <- x*y
write.csv(some, file = "some")
function(){
z <- 4
another <- y-x
write.csv(another, file = "another")
function() {
r <- c(z, x, y)
write.csv (r, file = "yetanother")
}
}
}
}
}
Main <- function(){
x <- 1:3
function(){
y <- 4:6
some <- x*y
write.csv(some, file = "some")
function(){
z <- 4
another <- y-x
write.csv(another, file = "another")
function() {
r <- c(z, x, y)
write.csv (r, file = "yetanother")
}
}
}
#  function(){
#    x <- c("a", "b")
#    write.csv (x, "last_one.csv")
#  }
}
Main()
Main()()()()
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
y(2)
f(2)
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) { x*y
}
f(2)
y <- 10
f1 <- function(x) {
function() {
x + 10
}
}
f1(1)()
Main <- function(){
x <- 1:3
function(){
y <- 4:6
some <- x*y
write.csv(some, file = "some")
}
#  function(){
#    x <- c("a", "b")
#    write.csv (x, "last_one.csv")
#  }
}
Main()
Main()()
x <- c(1, 3)
y <- c(2, 4)
c(x,y)
Main <- function(){
x <- c(1, 3)
function(){
y <- c(2, 4)
c(x,y)
}
}
Main()
Main()()
Main <- function(){
x <- c(1, 3)
a <- function(){
y <- c(2, 4)
c(x,y)
}
}
Main()
1*Main()
Main()
Main <- function(){
x <- c(1, 3)
a <- function(){
y <- c(2, 4)
}
c(x,y)
}
Main()
a
?env
?environment
Main()()
Main <- function(){
x <- c(1, 3)
a <- function(){
y <- c(2, 4)
c(x,y)
}
}
Main()
Main()()
runif
a <- runif(100, 0, 1)
a
options
?options
options(digits = 2)
a
options(digits = 1)
a
plot (hist(a))
summary(a)
?summary
a <- runif(100, 0, 1)
b <- runif(100, 0, 1)
plot (a,b)
c <- lm(a,b)
c <- lm(a~b)
c
summary (c)
rnorm
a <- rnorm(100, mean = 1, sd = 2)
plot (a)
?rnorm
?data
ls(data)
a <- rnorm(1000, mean = 1, sd = 2)
plot (a)
plot (hist(a))
a[1:50]
a <- rnorm(1000, mean = 1, sd = .5)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = .5)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 5)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 1)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 10)
plot(a)
plot (hist(a))
a <- rnorm(1000, mean = 1, sd = 10)
plot(a)
plot (hist(a))
plot (density(a))
boxplot(a)
a <- rnorm(1000, mean = 1, sd = 1)
plot(a)
plot (hist(a))
plot (density(a))
boxplot(a)
distributions
rnorm
?rnorm
pnorm
pnorm(a)
qnorm(a)
data
help(data)
?data
data()
ChickWeight
head(ChickWeight)
Chickweight
?Chickweight
??ChickWeight
head(ChickWeight, 20)
table(ChickWeight[,3], ChickWeight[,4])
data(Titanic)
summary(Titanic)
?Titanic
table(Titanic$Age, Titanic$Survived)
table(Titanic[,3], Titanic[,4])
head(Titanic)
str(Titanic)
Titanic <- as.data.frame(Titanic)
View(Titanic)
library(ggplot2)
data(ggplot)
data(diamonds)
head(diamonds)
table(diamonds$clarity)
table(cut)
str(diamonds)
?diamonds
?lm
d <- lm(lm$price~lm$carat)
d <- lm(diamonds$price~diamonds$carat)
summary (d)
d
qplot
qplot(carat, price, data = diamonds)
summary (d)
d
qplot(carat, data = diamonds)
plot(d)
qplot
qplot()
qplot(carat, price, data = diamonds, facets = cut)
qplot(carat, price, data = diamonds, facets = cut)
?formulas
?lm
d <- lm(diamonds$price~diamonds$carat +
diamonds$color)
summary (d)
d[[1]]
d[[2]]
d[[3]]
d[[4]]
summary (d)
d <- lm(diamonds$price~diamonds$carat)
summary (d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$table)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$cut)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$cut +
diamonds$depth)
summary(d)
d <- lm(diamonds$price~diamonds$carat +
diamonds$color +
diamonds$clarity +
diamonds$cut +
diamonds$depth +
diamonds$table)
summary(d)
plot(d)
data(galton)
??galton
p <- ggplot(diamonds, aes(price, carat))
p <- p + geom_point()
p
p <- ggplot(diamonds, aes(carat, price))
p <- p + geom_point()
p
p <- ggplot(diamonds, aes(carat, price))
p <- p + geom_point(colour = cut)
p
?ggplot
agrs(ggplot)
args(ggplot)
ggplot
body(ggplot)
lm
?lm
setwd("~/Desktop/Kentucky Graduation Project")
wd <- getwd()
file <- paste (wd, "data sets", "ELSI_csv_export_6353406681986067459539.csv", sep = "/")
gr <- read.csv (file, header = T, sep = ",", strip.white = T, skip = 6, nrow = 51,
colClasses = "character", as.is = T)
#set to integer
gr[2:31] <- sapply (gr[2:31], FUN = as.integer)
#eliminate NAs
begin.states <- gr[,1]
apply(gr, 2, function(x) length(which(is.na(x)))) #NAs per column
gr <- gr[,-31]  #25 NAs in column 31
gr <- gr[complete.cases(gr[, 1:30]), ]
remain.states <- gr [,1]
exclude <- setdiff (begin.states, remain.states) #DC, NY, PN, SC, WI excluded
#shorten variable names
names (gr) <- sub("Grade", "Gr", names (gr))
names (gr) <- sub ("Diploma", "Dipl", names (gr))
names (gr) <- sub ("State", "", names (gr))
names (gr) <- sub ("Students", "Stud", names (gr))
names (gr) <- sub ("Recipients", "Reci", names (gr))
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
#total columns
total <- colSums (gr[,2:ncol (gr)], na.rm = T)
total <- as.data.frame (total)
total <- t (total)
total <-as.data.frame (total)
Gr.8.C.National.2009.10 <- total$Dipl.Reci.2009.10 / total$Gr.8.Stud.2005.06
Gr.8.C.National.2008.09 <- total$Dipl.Reci.2008.09 / total$Gr.8.Stud.2004.05
Gr.8.C.National.2007.08 <- total$Dipl.Reci.2007.08 / total$Gr.8.Stud.2003.04
Gr.8.C.National.2006.07 <- total$Dipl.Reci.2006.07 / total$Gr.8.Stud.2002.03
Gr.8.C.National.2005.06 <- total$Dipl.Reci.2005.06 / total$Gr.8.Stud.2001.02
Gr.8.C.National.2004.05 <- total$Dipl.Reci.2004.05 / total$Gr.8.Stud.2000.01
Gr.8.C.National.2003.04 <- total$Dipl.Reci.2003.04 / total$Gr.8.Stud.1999.00
Gr.8.C.National.2002.03 <- total$Dipl.Reci.2002.03 / total$Gr.8.Stud.1998.99
Nat.Grad.Rate <- cbind (Gr.8.C.National.2002.03,
Gr.8.C.National.2003.04,
Gr.8.C.National.2004.05,
Gr.8.C.National.2005.06,
Gr.8.C.National.2006.07,
Gr.8.C.National.2007.08,
Gr.8.C.National.2008.09,
Gr.8.C.National.2009.10)
rm (Gr.8.C.National.2002.03,
Gr.8.C.National.2003.04,
Gr.8.C.National.2004.05,
Gr.8.C.National.2005.06,
Gr.8.C.National.2006.07,
Gr.8.C.National.2007.08,
Gr.8.C.National.2008.09,
Gr.8.C.National.2009.10)
Nat.Grad.Rate <- as.data.frame (t(Nat.Grad.Rate))
Year <- (2002:2009)
Nat.Grad.Rate <- cbind (Year, Nat.Grad.Rate)
names (Nat.Grad.Rate)[2] <- "Gr.8.Cohort.National"
ky <- gr[gr$.Name == "KENTUCKY", ]
Gr.8.C.KY.2009.10 <- ky$Dipl.Reci.2009.10 / ky$Gr.8.Stud.2005.06
Gr.8.C.KY.2008.09 <- ky$Dipl.Reci.2008.09 / ky$Gr.8.Stud.2004.05
Gr.8.C.KY.2007.08 <- ky$Dipl.Reci.2007.08 / ky$Gr.8.Stud.2003.04
Gr.8.C.KY.2006.07 <- ky$Dipl.Reci.2006.07 / ky$Gr.8.Stud.2002.03
Gr.8.C.KY.2005.06 <- ky$Dipl.Reci.2005.06 / ky$Gr.8.Stud.2001.02
Gr.8.C.KY.2004.05 <- ky$Dipl.Reci.2004.05 / ky$Gr.8.Stud.2000.01
Gr.8.C.KY.2003.04 <- ky$Dipl.Reci.2003.04 / ky$Gr.8.Stud.1999.00
Gr.8.C.KY.2002.03 <- ky$Dipl.Reci.2002.03 / ky$Gr.8.Stud.1998.99
KY.Grad.Rate  <- cbind (Gr.8.C.KY.2002.03,
Gr.8.C.KY.2003.04,
Gr.8.C.KY.2004.05,
Gr.8.C.KY.2005.06,
Gr.8.C.KY.2006.07,
Gr.8.C.KY.2007.08,
Gr.8.C.KY.2008.09,
Gr.8.C.KY.2009.10)
rm  (Gr.8.C.KY.2002.03,
Gr.8.C.KY.2003.04,
Gr.8.C.KY.2004.05,
Gr.8.C.KY.2005.06,
Gr.8.C.KY.2006.07,
Gr.8.C.KY.2007.08,
Gr.8.C.KY.2008.09,
Gr.8.C.KY.2009.10)
KY.Grad.Rate <- as.data.frame(t(KY.Grad.Rate))
names (KY.Grad.Rate) <- "Gr.8.Cohort.KY"
KY.Grad.Rate$Year <- 2002:2009
Nat.vs.KY.Grad.Rate <- merge (Nat.Grad.Rate, KY.Grad.Rate)
#write object out
file <- paste (wd, "objects", "Nat.vs.KY.Gr.8.Cohort.2002.2009.csv", sep = "/")
write.csv (Nat.vs.KY.Grad.Rate, file = file)
#Eighth Grade Cohort-Plot
p1 <- ggplot(Nat.vs.KY.Grad.Rate, aes (Year, Gr.8.Cohort.KY))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
p1 <- ggplot(Nat.vs.KY.Grad.Rate, aes (Year, Gr.8.Cohort.KY))
p1 <- p1 + geom_line(colour = "red")
p1 <- p1 + ylim (.6, .95)
p1 <- p1 + scale_x_continuous (limits = c(2001, 2015), breaks = seq(from = 2001, to = 2015, by = 2))
p1 <- p1 + geom_line (aes (Year, Gr.8.Cohort.National), colour = "black")
p1 <- p1 + xlab("Year") + ylab ("Rate")
p1 <- p1 + ggtitle ("Eighth Grade Cohort from CCD \n National vs. Kentucky")
p1 <- p1 + annotate ("text", x = 2009.5, y = .79, label = "National",size = 3)
p1 <- p1 + annotate ("text" , x = 2009, y = .86, label = "Kentucky", colour = "red", size = 3)
p1 <- p1 + annotate("rect", xmin = 2002, xmax = 2014, ymin = .625, ymax = .925,
alpha = .1)
p1 <- p1 + annotate ("text", x = 2013, y = .64, label = "NCLB", size = 5)
p1
wd <- getwd()
file <- paste (wd, "data sets", "ELSI_csv_export_6353406681986067459539.csv", sep = "/")
gr <- read.csv (file, header = T, sep = ",", strip.white = T, skip = 6, nrow = 51,
colClasses = "character", as.is = T)
#set to integer
gr[2:31] <- sapply (gr[2:31], FUN = as.integer)
#eliminate NAs
begin.states <- gr[,1]
begin.states
apply(gr, 2, function(x) length(which(is.na(x)))) #NAs per column
gr <- gr[,-31]  #25 NAs in column 31
gr <- gr[complete.cases(gr[, 1:30]), ]
remain.states <- gr [,1]
exclude <- setdiff (begin.states, remain.states) #DC, NY, PN, SC, WI excluded
exclude
names (gr)
#shorten variable names
names (gr) <- sub("Grade", "Gr", names (gr))
names (gr) <- sub ("Diploma", "Dipl", names (gr))
names (gr) <- sub ("State", "", names (gr))
names (gr) <- sub ("Students", "Stud", names (gr))
names (gr) <- sub ("Recipients", "Reci", names (gr))
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
names (gr) <- gsub ("..", ".", names (gr), fixed = T)
gr[,1]
names (gr)
#total columns
total <- colSums (gr[,2:ncol (gr)], na.rm = T)
total <- as.data.frame (total)
total <- t (total)
total <-as.data.frame (total)
total
Gr.8.C.National.2009.10 <- total$Dipl.Reci.2009.10 / total$Gr.8.Stud.2005.06
Gr.8.C.National.2008.09 <- total$Dipl.Reci.2008.09 / total$Gr.8.Stud.2004.05
Gr.8.C.National.2007.08 <- total$Dipl.Reci.2007.08 / total$Gr.8.Stud.2003.04
Gr.8.C.National.2006.07 <- total$Dipl.Reci.2006.07 / total$Gr.8.Stud.2002.03
Gr.8.C.National.2005.06 <- total$Dipl.Reci.2005.06 / total$Gr.8.Stud.2001.02
Gr.8.C.National.2004.05 <- total$Dipl.Reci.2004.05 / total$Gr.8.Stud.2000.01
Gr.8.C.National.2003.04 <- total$Dipl.Reci.2003.04 / total$Gr.8.Stud.1999.00
Gr.8.C.National.2002.03 <- total$Dipl.Reci.2002.03 / total$Gr.8.Stud.1998.99
names (gr)
Nat.Grad.Rate <- cbind (Gr.8.C.National.2002.03,
Gr.8.C.National.2003.04,
Gr.8.C.National.2004.05,
Gr.8.C.National.2005.06,
Gr.8.C.National.2006.07,
Gr.8.C.National.2007.08,
Gr.8.C.National.2008.09,
Gr.8.C.National.2009.10)
rm (Gr.8.C.National.2002.03,
Gr.8.C.National.2003.04,
Gr.8.C.National.2004.05,
Gr.8.C.National.2005.06,
Gr.8.C.National.2006.07,
Gr.8.C.National.2007.08,
Gr.8.C.National.2008.09,
Gr.8.C.National.2009.10)
Nat.Grad.Rate <- as.data.frame (t(Nat.Grad.Rate))
Year <- (2002:2009)
Nat.Grad.Rate <- cbind (Year, Nat.Grad.Rate)
names (Nat.Grad.Rate)[2] <- "Gr.8.Cohort.National"
ky <- gr[gr$.Name == "KENTUCKY", ]
ky
Gr.8.C.KY.2009.10 <- ky$Dipl.Reci.2009.10 / ky$Gr.8.Stud.2005.06
Gr.8.C.KY.2008.09 <- ky$Dipl.Reci.2008.09 / ky$Gr.8.Stud.2004.05
Gr.8.C.KY.2007.08 <- ky$Dipl.Reci.2007.08 / ky$Gr.8.Stud.2003.04
Gr.8.C.KY.2006.07 <- ky$Dipl.Reci.2006.07 / ky$Gr.8.Stud.2002.03
Gr.8.C.KY.2005.06 <- ky$Dipl.Reci.2005.06 / ky$Gr.8.Stud.2001.02
Gr.8.C.KY.2004.05 <- ky$Dipl.Reci.2004.05 / ky$Gr.8.Stud.2000.01
Gr.8.C.KY.2003.04 <- ky$Dipl.Reci.2003.04 / ky$Gr.8.Stud.1999.00
Gr.8.C.KY.2002.03 <- ky$Dipl.Reci.2002.03 / ky$Gr.8.Stud.1998.99
KY.Grad.Rate  <- cbind (Gr.8.C.KY.2002.03,
Gr.8.C.KY.2003.04,
Gr.8.C.KY.2004.05,
Gr.8.C.KY.2005.06,
Gr.8.C.KY.2006.07,
Gr.8.C.KY.2007.08,
Gr.8.C.KY.2008.09,
Gr.8.C.KY.2009.10)
rm  (Gr.8.C.KY.2002.03,
Gr.8.C.KY.2003.04,
Gr.8.C.KY.2004.05,
Gr.8.C.KY.2005.06,
Gr.8.C.KY.2006.07,
Gr.8.C.KY.2007.08,
Gr.8.C.KY.2008.09,
Gr.8.C.KY.2009.10)
KY.Grad.Rate <- as.data.frame(t(KY.Grad.Rate))
names (KY.Grad.Rate) <- "Gr.8.Cohort.KY"
KY.Grad.Rate$Year <- 2002:2009
Nat.vs.KY.Grad.Rate <- merge (Nat.Grad.Rate, KY.Grad.Rate)
View(Nat.vs.KY.Grad.Rate)
