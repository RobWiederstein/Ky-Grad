install.packages("tidyr")
library(tidyr)
?tidyr
# From http://stackoverflow.com/questions/1181060
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocks
gather(stocks, stock, price, -time)
sqrt(3) * sqrt(3)
x <- 1:100
y <- (sqrt(x + 2) - 3)
plot(x, y)
y <- x3 - 4
plot(x, y)
x <- 1:100
y <- x3 - 4
plot(x, y)
y <- x^3 - 4
plot(x, y)
x <- 1:35
y <- 1000 * (1.06^x)
plot(x, y)
y <- 1000 * (1.08^x)
plot(x, y)
principle <- 1000
final <- pinciple * interest^year01:year35
final <- principle * interest^year01:year35
interest <- .06
final <- principle * interest^year01:year35
principle <- 1000
year01 <- 1
year35 <- 35
interest <- .06
final <- principle * interest^year01:year35
plot(x, y)
plot(x, y)
plot(cars)
names(mtcars)
plot(mtcars$mpg, mtcars$wt)
print("today is Saturday")
id <- 1:3
lt <- letters[1:3]
df <- as.data.frame(cbind(id, lt))
df
str(df)
?as.data.frame
df <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
df.1 <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
rm(df)
?gl
df.2 <- as.data.frame(id = rep(1:3,3))
rep(1:3, 3)
id = rep(1:3, 3)
df.2 <- as.data.frame(id = rep(1:3,3))
id <- rep(1:3, 3)
df.2 <- as.data.frame(id)
df.2 <- as.data.frame(id, stringsAsFactors = F)
head(df.1)
head(df.2)
merge(df.1, df.2)
df.3 <- merge(df.1, df.2)
View(df.3)
?merge
df.3 <- merge(df.1, df.2) #reorders
df.4 <- merge(df.1, df.2, sort = F)
View(df.4)
Row.names(df.3)
df.1
df.2
df.3
df.4
df.4 <- merge(df.1, df.2, sort = FALSE)
View(df.4)
row.names(df.4)
View(df.4)
a <- 1:3
which(a == 1)
a <- 10:13
which(a == 1)
which(a == 10)
a[a == 10]
a[a == 10] <- "apple"
b <- 10
a <- 10:13
which(a == 10)
b <- 10
match(a, b)
pmatch(a,b)
?match
a %in% b
b %in% a
which(a == b)
which(a == b)
which(b == a)
match(a, b)
match(b, a)
?pmatch
pmatch(a,b)
pmatch(b, a)
match(a, b)
a[match(a, b)]
which(match(a,b))
which(a %in% b)
a[which(a %in% b)]
a[which(a %in% b)] <- 4
a
a <- 10:13
b <- 10:11
which(a == 10)
which(a == b)
a[a == b] <- "apple"
a <- 10:13
b <- 10:11
which(a == 10)
which(a == b)
a %in% b
b %in% a
which(a == b)
which(b == a)
match(a, b)
match(b, a)
?match
match(a, b, nomatch = 0)
x <- data.frame(code = 7:9, food = c('banana', 'apple', 'popcorn'))
y <- data.frame(food = c('banana', 'apple', 'popcorn'),
isfruit = c('fruit', 'fruit', 'not fruit'))
x
y
x <- data.frame(
ref = c( 'Ref1', 'Ref2' )
, label = c( 'Label01', 'Label02' )
)
y <- data.frame(
id = c( 'A1', 'C2', 'B3', 'D4' )
, ref = c( 'Ref1', 'Ref2' , 'Ref3','Ref1' )
, val = c( 1.11, 2.22, 3.33, 4.44 )
)
x
y
merge( x, y, by='ref', all.y = T, sort= T)
x
y
merge( x, y, by='ref', all.y = T, sort= T)
id <- 1:3
lt <- letters[1:3]
df.1 <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
id <- rep(1:3, 3)
df.2 <- as.data.frame(id, stringsAsFactors = F)
nrow(df.2)
df.2$order <- 1:nrow(df.2)
df.2
df.3 <- merge(df.1, df.2) #reorders
df.3
?order
df.3[order(df.3$order)]
df.3[order(df.3$order),]
sample
id <- sample(1:10, n = 100, replace = T)
lt <- letters[1:10]
id <- sample(1:10, n = 100, replace = T)
lt <- letters[1:10]
id <- 1:10
lt <- letters[1:10]
df.1 <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
id <- sample(1:10, n = 100, replace = T)
sample
args(sample)
id <- sample(1:10, size = 100, replace = T)
df.2 <- as.data.frame(id, stringsAsFactors = F)
df.2$order <- 1:nrow(df.2)
df.2
df.3 <- merge(df.1, df.2) #reorders
df.3
df.3[order(df.3$order), ]
df.3 <- df.3[order(df.3$order), ]
df.3
search()
library(plyr)
library(dplyr)
id <- 1:10
lt <- letters[1:10]
df.1 <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
id <- sample(1:10, size = 100, replace = T)
df.2 <- as.data.frame(id, stringsAsFactors = F)
args(join)
join(df.1, df.2)
args(join)
?join
args(row.names)
row.names
row.names(df.1)
row.names(df.2)
row.names(df.3)
id <- 1:10
lt <- letters[1:10]
df.1 <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
id <- sample(1:10, size = 100, replace = T)
df.2 <- as.data.frame(id, stringsAsFactors = F)
df.2$order <- 1:nrow(df.2)
df.3 <- merge(df.1, df.2) #reorders
df.3 <- df.3[order(df.3$order), ]
row.names(df.3)
id <- 1:10
lt <- letters[1:10]
df.1 <- as.data.frame(cbind(id, lt), stringsAsFactors = F)
id <- sample(1:10, size = 100, replace = T)
df.2 <- as.data.frame(id, stringsAsFactors = F)
df.2$order <- 1:nrow(df.2)
row.names(df.2)
df.2$order
df.3 <- merge(df.1, df.2) #reorders
df.3
row.names(df.3)
?merge
?I
df.3$rn <- row.names(df.3)
head(df.3)
a <- 10:13
b <- 10:11
which(a == 10)
which(a == b)
a %in% b
which(a %in% b)
which(a == b)
which(b == a)
match(a, b, nomatch = 0)
match(b, a)
?match
## The intersection of two sets can be defined via match():
## Simple version:
1:10 %in% c(1,3,5,9)
sstr <- c("c","ab","B","bba","c",NA,"@","bla","a","Ba","%")
sstr[sstr %in% c(letters, LETTERS)]
df <- data.frame(matrix(rep("a", 12), nrow = 4))
View(df)
row <- 1
col <- 1
df[row, col]
df <- data.frame(matrix(letters(1:12), nrow = 4))
df <- data.frame(matrix(letters[1:12], nrow = 4))
df <- data.frame(I(matrix(letters[1:12], nrow = 4)))
View(df)
df <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F))
df <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
row <- 1
col <- 1
df[row, col]
df <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
pick <- function(x , row, col){
x[row, col]
}
pick(df, 1, 1)
df.1 <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
df.2 <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
df.1 <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
df.2 <- data.frame(matrix(letters[12:1], nrow = 4), stringsAsFactors = F)
l <- list(df.1, df.2)
lapply(l, pick, 1 , 1)
df.1
df.2
lapply(l, pick, 1:3, 1)
df.1
df.2 <- data.frame(matrix(paste0(rep(letters[1:12], 2), sep = ""), nrow = 4), stringsAsFactors = F)
df.2
df.2 <- data.frame(matrix(paste0(letters[1:12], letters[1:12], sep = ""), nrow = 4), stringsAsFactors = F)
df.2
lapply(l, pick, 1 , 1)
df.1 <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
df.2 <- data.frame(matrix(paste0(letters[1:12], letters[1:12], sep = ""), nrow = 4), stringsAsFactors = F)
l <- list(df.1, df.2)
pick <- function(x , row, col){
x[row, col]
}
lapply(l, pick, 1 , 1)
lapply(l, pick, 1:3, 1)
lapply(l, pick, 5, 1)
pick <- function(x , row, col){
if(row < 1){stop("row > 1?")}
x[row, col]
}
pick <- function(x , row, col){
if(!any(match(row, 1:nrow(x)))){stop("no match")}
if(row < 1){stop("row > 1?")}
x[row, col]
}
df.1 <- data.frame(matrix(letters[1:12], nrow = 4), stringsAsFactors = F)
df.2 <- data.frame(matrix(paste0(letters[1:12], letters[1:12], sep = ""), nrow = 4), stringsAsFactors = F)
l <- list(df.1, df.2)
pick <- function(x , row, col){
if(!any(match(row, 1:nrow(x)))){stop("no match")}
if(row < 1){stop("row > 1?")}
x[row, col]
}
lapply(l, pick, 5, 2)
pick <- function(x , row, col){
if(any(match(row, 1:nrow(x)))== length(1)){stop("no match")}
if(row < 1){stop("row > 1?")}
x[row, col]
}
lapply(l, pick, 5, 2)
x <- df.1
row <- 5
col <- 1
if(any(match(row, 1:nrow(x)))== length(1)){stop("no match")}
match(row, 1:nrow(x))
nrow(x)
match(row, 1:nrow(x))
match(1,1)
any(match(1,1))
any(match(1,2))
any(match(1,2, nomatch = F))
if(any(match(row, 1:nrow(x), nomatch = F)){stop("no match")}
if(any(match(row, 1:nrow(x), nomatch = F))){stop("no match")}
x <- df.1
row <- 5
col <- 1
if(any(match(row, 1:nrow(x), nomatch = F))){stop("no match")}
if(!any(match(row, 1:nrow(x), nomatch = F))){stop("no match")}
row %in% 1:nrow(x)
!(row %in% 1:nrow(x))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
destfile <- "idaho.csv"
download.file(url = url, destfile = destfile, method = "curl")
id <- read.csv(destfile, header = T)
a <- str_split(names(id))
library(stingr)
a <- str_split(names(id))
?strsplit
a <- strsplit(names(id), split = "wgtp")
a[[123]]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile <- "gdp.csv"
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile <- "gdp.csv"
download.file(url = url, destfile = destfile, method = "curl")
gdp <- read.csv("gdp.csv", header = T)
names(gdp)
View(gdp)
?read.csv
gdp <- read.csv("gdp.csv", header = T, skip = 2, nrows = 192)
View(gdp)
gdp <- read.csv("gdp.csv", header = T, skip = 2, nrows = 192, blank.lines.skip = T)
View(gdp)
gdp <- read.csv("gdp.csv", header = F, skip = 4, nrows = 190, blank.lines.skip = T)
View(gdp)
gdp <- read.csv("gdp.csv", header = F, skip = 5, nrows = 190, blank.lines.skip = T)
View(gdp)
a <- gdp[, 5]
a
a <- gsub(",", "", a)
a
library(gdata)
trim(a)
a <- trim(a)
sum(a)
a <- as.numeric(a)
sum(a)
mean(a)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile <- "edu"
download.file(url = url, destfile = destfile, method = "curl")
destfile <- "edu.csv"
download.file(url = url, destfile = destfile, method = "curl")
ed <- read.csv("edu.csv")
View(ed)
rm(id)
names(ed)
ed <- read.csv("edu.csv", strip.white = T)
View(ed)
names(gdp)
View(gdp)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
length(sampleTimes)
View(amzn)
nrows(amzn)
dim(amxn)
dim(amzn)
length(grep("^2012", row.names(amxn)))
length(grep("^2012", row.names(amzn)))
length(grep("^2012", sampleTimes)
)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile <- "edu.csv"
download.file(url = url, destfile = destfile, method = "curl")
ed <- read.csv("edu.csv", strip.white = T)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile <- "gdp.csv"
download.file(url = url, destfile = destfile, method = "curl")
gdp <- read.csv("gdp.csv", header = F, skip = 5, nrows = 190, blank.lines.skip = T)
names(gdp)
names(ed)
names(gdp)[1] <- names(ed)[1]
names(gdp)
merge(ed, gdp)
a <- merge(ed, gdp)
View(a)
apply(a, 1, grep("June", a))
apply(a, 1, FUN = grep, "June"))
apply(a, 1, FUN = grep, "June")
grep("fiscal", names(a))
grep("year", names(a))
a <- a[, c(1, grep("year", names(a)))]
a
?scan
hotel.dat <- "<Avg. Price>$103, <URL>http://www.tripadvisor.com/ShowUserReviews-g60878-d100506-r21086254-,
<Author>expressoparking"
?read.delim
y <- read.delim("hotel.dat")
?scan
?write.csv
write.table(hotel.dat, file = "hotel.dat")
y <- read.delim("hotel.dat")
y
hotel.dat <- "<Avg. Price>$103, <URL>http://www.tripadvisor.com/ShowUserReviews-g60878-d100506-r21086254-,
<Author>expressoparking"
hotel.dat <- as.data.frame(hotel.dat)
View(hotel.dat)
y <- "<Author>expressoparking"
author <- grep("<Author>*", y)
data_author <- y[author,]
getwd()
a <- c(NA, 2)
b <- c(1, 2)
a == NA
str(a)
class(a)
a == 2
a == NA
a == "NA"
?is.na
is.na(a)
is.na(a) == T
which(is.na(a) == T)
a <- c(NA, 2, NA)
which(is.na(a) == T)
a[which(is.na(a) == T)]
a[which(is.na(a) == T)] <- b[1]
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a <- a[which(is.na(a) == T)] <- b[1]
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a[which(is.na(a) == T)] <- b[1]
df <- data.frame(a, b)
View(df)
str(df)
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
df <- data.frame(a, b)
str(df)
df
which(is.na(df$a) == T)
df[which(is.na(df$a) == T), ]
df[which(is.na(df$a) == T), df$a]
df[which(is.na(df$a) == T), c("a")]
df
df[which(is.na(df$a) == T), c("a")] <- df[which(is.na(df$a) == T), c("b")
)
df[which(is.na(df$a) == T), c("a")] <- df[which(is.na(df$a) == T), c("b")]
df
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a[which(is.na(a) == T)] <- b[which(is.na(a) == T]
a <- c(NA, 2, NA)
b <- c(1, 2, 3)
a[which(is.na(a) == T)] <- b[which(is.na(a) == T]
a[which(is.na(a) == T)] <- b[which(is.na(a) == T)]
?data
character(a)
?datasets()
?library
library(help = "datasets")
data(AirPassengers)
head(AirPassengers)
names(AirPassengers)
data(AirPassengers)
head(AirPassengers)
?AirPassengers
ap <- data(AirPassengers)
dim(ap)
class(ap)
ap <- AirPassengers
class(ap)
dim(ap)
class(ap)
ap <- AirPassengers
dim(ap)
class(ap)
ap
source('~/.active-rstudio-document', echo=TRUE)
getwd()
dir()
setwd("~/Dropbox")
dir()
setwd("./R-Projects")
dir()
setwd("./kgp")
dir()
dir.list()
list.dir()
list.files()
?list.files
list.dirs(path = ".", full.names = TRUE, recursive = TRUE)
getwd()
setwd("~/Dropbox/R-Projects/kgp")
